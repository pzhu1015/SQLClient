<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="connect_success" xml:space="preserve">
    <value>连接成功</value>
  </data>
  <data name="dataTypes" xml:space="preserve">
    <value>CHAR
NCHAR
VARCHAR2
VARCHAR
NVARCHAR2
CLOB
NCLOB
LONG
NUMBER
BINARY_FLOAT
BINARY_DOUBLE
DATE
INTERVAL DAY TO SECOND
INTERVAL YEAR TO MONTH
TIMESTAMP
TIMESTAMP WITH TIME ZONE
TIMESTAMP WITH LOCAL TIME ZONE
BLOB
BFILE
RAW
LONG RAW
ROWID
CHARACTER
CHARACTER VARYING
CHAR VARYING
NATIONAL CHARACTER
NATIONAL CHAR
NATIONAL CHAR
NATIONAL CHAR
NATIONAL CHARACTER VARYING
NATIONAL CHAR VARYING
NCHAR VARYING
NUMERIC
DECIMAL
INTEGER
INT
SMALLINT
FLOAT
DOUBLE PRECISION
REAL
(COMPLEX)</value>
  </data>
  <data name="designTableScript" xml:space="preserve">
    <value>SELECT
          A .column_name AS FIELDNAME,
          A .data_type AS FIELDTYPE,
          NVL (DECODE (A .data_type,	'NUMBER', A .data_precision,A .data_length),'') AS FIELDLENGTH,
          NVL (A .data_scale, 0) AS FIELDSCALE,
          DECODE(A .nullable, 'N', 1, 0) AS FIELDISNULL,
          DECODE (E .key1, 'P', 1, 0) AS FIELDPRIMARYKEY,
          A .data_default AS FIELDDEFAULT,
          f.comments AS FIELDCOMMENTS
        FROM
          user_tab_columns A,
          user_col_comments f,
          user_tab_comments,
          (
            SELECT
            uc.table_name,
            uc.constraint_name,
            ucc.column_name,
            uc.constraint_type key1,
            uc.constraint_type key2
            FROM
              user_constraints uc,
              user_cons_columns ucc
            WHERE
              (uc.constraint_type = 'R' OR uc.constraint_type = 'P')
              AND uc.constraint_name = ucc.constraint_name
              AND uc. OWNER = ucc. OWNER
              AND uc.table_name = ucc.table_name
              AND ucc.table_name NOT LIKE 'BIN$%==$0'
           ) E
         WHERE
          A .table_name = E .table_name (+)
          AND A .column_name = E .column_name (+)
          AND A .table_name = f.table_name
          AND A .column_name = f.column_name
          AND A .table_name = user_tab_comments.table_name
          AND A .table_name NOT LIKE 'BIN$%==$0'
          AND A .table_name = '{0}'
         ORDER BY A .COLUMN_ID ASC</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="loadTableScript" xml:space="preserve">
    <value>select * from user_tables</value>
  </data>
  <data name="loadViewScript" xml:space="preserve">
    <value>select * from user_views</value>
  </data>
  <data name="openTableScript" xml:space="preserve">
    <value>SELECT* FROM (SELECT "SQL_TABLE".*, ROWNUM "SQL_ROWNUM" FROM(SELECT "{0}".*, ROWID "SQL_ROWID" FROM "{1}") "SQL_TABLE" WHERE ROWNUM &lt;= {2}) WHERE SQL_ROWNUM &gt; {3}</value>
  </data>
  <data name="openViewScript" xml:space="preserve">
    <value>SELECT* FROM (SELECT "SQL_TABLE".*, ROWNUM "SQL_ROWNUM" FROM(SELECT "{0}".*, ROWID "SQL_ROWID" FROM "{1}") "SQL_TABLE" WHERE ROWNUM &lt;= {2}) WHERE SQL_ROWNUM &gt; {3}</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="oracle_close_16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\oracle_close_16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="oracle_logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\oracle_logo.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="oracle_open_16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\oracle_open_16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="prompt" xml:space="preserve">
    <value>提示</value>
  </data>
</root>